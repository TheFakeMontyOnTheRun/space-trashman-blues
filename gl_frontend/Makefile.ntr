#---------------------------------------------------------------------------------
.SUFFIXES:
#---------------------------------------------------------------------------------

ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

include $(DEVKITARM)/ds_rules

#---------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
# DATA is a list of directories containing binary files embedded using bin2o
# GRAPHICS is a list of directories containing image files to be converted with grit
# AUDIO is a list of directories containing audio to be converted by maxmod
# ICON is the image used to create the game icon, leave blank to use default rule
# NITRO is a directory that will be accessible via NitroFS
#---------------------------------------------------------------------------------
TARGET   := derelict
BUILD    := build
SOURCES  := menu/src base3d/src base3d/src/intro SoundSystem GL1Common
INCLUDES := menu/include base3d/include SoundSystem
DATA     :=
GRAPHICS :=
AUDIO    :=
ICON     := icon_512.png

# specify a directory which contains the nitro filesystem
# this is relative to the Makefile
NITRO    := filesystem

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------
ARCH := -marm -mthumb-interwork -march=armv5te -mtune=arm946e-s

CFLAGS   := -g -Wall -O3\
            $(ARCH) $(INCLUDE) -DARM9 -DTILED_BITMAPS -DNDS -DCLI_BUILD -DINCLUDE_ITEM_DESCRIPTIONS -I../base3d/include -DENDIANESS_AWARE  -DXRES_FRAMEBUFFER=320 -DYRES_FRAMEBUFFER=200 -DXRES_SCREEN=255 -DYRES_SCREEN=191   -DSUPPORTS_HACKING_MINIGAME \
            -I../menu/include          \
            -I../../core/include \
            -I../../common/include \
            -Wall -Wextra -Wno-unused-parameter -Wno-switch -Wno-unused-variable -pedantic

ASFLAGS  := -g $(ARCH)
LDFLAGS   = -specs=ds_arm9.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map)

#---------------------------------------------------------------------------------
# any extra libraries we wish to link with the project (order is important)
#---------------------------------------------------------------------------------
LIBS := -lfilesystem -lfat -lnds9

#---------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level containing
# include and lib
#---------------------------------------------------------------------------------
LIBDIRS	:=	$(LIBNDS)

#---------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add additional
# rules for different file extensions
#---------------------------------------------------------------------------------
ifneq ($(BUILD),$(notdir $(CURDIR)))
#---------------------------------------------------------------------------------

export OUTPUT	:=	$(CURDIR)/$(TARGET)

export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir))
export DEPSDIR	:=	$(CURDIR)/$(BUILD)

CFILES   := ../../common/src/MainMenu.c \
                              		../menu/src/Main.c \
                              		../base3d/src/nitro/NitroGLRenderer.c \
                              		../GL1Common/LoadBitmap.c \
                              		../GL1Common/Renderer.c \
                              		../GL1Common/RendererRasterization.c \
                              		../GL1Common/RendererTesselation.c \
                              		../../common/src/Engine.c \
                              		../../common/src/UI.c \
					                ../../common/src/Mesh.c \
                              		../../common/src/HackingScreen.c \
                              		../../common/src/Crawler.c \
                              		../../common/src/HelpScreen.c \
                              		../../common/src/CreditsScreen.c \
                              		../../common/src/GameMenu.c \
                              		../../common/src/VisibilityStrategy.c \
                              		../../common/src/Globals.c \
                              		../../common/src/CTile3DProperties.c \
                              		../../common/src/Vec.c \
                              		../../common/src/Common.c \
                              		../../common/src/FixP.c \
                              		../../common/src/MapWithCharKey.c \
                              		../../common/src/PackedFileReader.c \
                              		../../common/src/EDirection_Utils.c \
                              		../../common/src/Events.c \
                              		../../common/src/Dungeon.c \
                              		../../common/src/NullMusic.c \
                              		../../common/src/PCMAudio.c \
                              		../../common/src/HackingMinigameRules.c \
                              		../../core/src/Derelict.c \
                              		../../core/src/Core.c \
                              		../../core/src/Parser.c
CPPFILES	:=
SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))
BINFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.bin)))

# prepare NitroFS directory
ifneq ($(strip $(NITRO)),)
      export NITRO_FILES := $(CURDIR)/$(NITRO)
endif

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
#---------------------------------------------------------------------------------
	export LD	:=	$(CC)
#---------------------------------------------------------------------------------
else
#---------------------------------------------------------------------------------
	export LD	:=	$(CXX)
#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------

export OFILES	:=	$(BINFILES:.bin=.o) \
					$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(SFILES:.s=.o)

export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
					-I$(CURDIR)/$(BUILD)

export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib)

.PHONY: $(BUILD) clean

#---------------------------------------------------------------------------------
$(BUILD):
	@[ -d $@ ] || mkdir -p $@
	@$(MAKE) --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile.ntr

#---------------------------------------------------------------------------------
clean:
	@echo clean ...
	rm -fvr $(BUILD) $(TARGET).elf $(TARGET).nds $(TARGET).ds.gba
	rm -fv menu/src/*.o
	rm -fv ../core/src/*.o
	rm -fv ../common/src/*.o
	rm -fv base3d/src/*.o
	rm -fv GL1Common/*.o
	rm -fv core/src/*.o
	rm -fv common/src/*.o
	rm -fv SoundSystem/*.o
	rm -fv base3d/src/nitro/*.o
	rm -fv menu/src/*.d
	rm -fv ../core/src/*.d
	rm -fv ../common/src/*.d
	rm -fv core/src/*.d
	rm -fv common/src/*.d
	rm -fv base3d/src/*.d
	rm -fv GL1Common/*.d
	rm -fv common/src/*.d
	rm -fv SoundSystem/*.d
	rm -fv base3d/src/nitro/*.d

#---------------------------------------------------------------------------------
else

DEPENDS	:=	$(OFILES:.o=.d)

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
$(OUTPUT).nds	: 	$(OUTPUT).elf
$(OUTPUT).elf	:	$(OFILES)

#---------------------------------------------------------------------------------
%.o	:	%.bin
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	$(bin2o)


-include $(DEPENDS)

#---------------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------------
