SYMBOLS {
	NES_MAPPER: type = weak, value = 0; # mapper number
	NES_PRG_BANKS: type = weak, value = 2; # number of 16K PRG banks, change to 2 for NROM256
	NES_CHR_BANKS: type = weak, value = 0; # number of 8K CHR banks
	NES_MIRRORING: type = weak, value = 0; # 0 horizontal, 1 vertical, 8 four screen
}

MEMORY {
	#INES Header:
	HEADER: start = $0, size = $10, fill = yes;

	# CPU Addresses:
	ZEROPAGE: start = $0000, size = $100, type = rw;
	RAM: start = $0400, size = $0300, define = yes;
	CSTACK: start = $700, size = $0100, define = yes;
	PRGROM: start = $8000, size = $7FFA, fill = yes;
	VECTORS: start = $fffa, size = $6, fill = yes;


}

SEGMENTS {
	HEADER: load = HEADER, type = ro;

	# PRG ROM
	STARTUP:  load = PRGROM, type = ro, define = yes;
	CODE: load = PRGROM, type = ro, define = yes;
	RODATA: load = PRGROM, type = ro, define = yes;
	ONCE: load = PRGROM, type = ro, define = yes;
	VECTORS: load = VECTORS, type = rw;

	# CHR ROM


	# RAM
	ZEROPAGE: load = ZEROPAGE, type = zp;
	BSS: load = RAM, type = bss, define = yes;
	DATA: load = PRGROM, run = RAM, type = rw, define = yes;
}

FEATURES {
	CONDES: segment = INIT,
		type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
		type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__;
	CONDES: type = interruptor,
		segment = RODATA,
		label = __INTERRUPTOR_TABLE__,
		count = __INTERRUPTOR_COUNT__;
}
